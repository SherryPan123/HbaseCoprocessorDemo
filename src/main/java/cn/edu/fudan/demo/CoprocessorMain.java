package cn.edu.fudan.demo;

import cn.edu.fudan.demo.autogenerated.Sum;
import com.google.protobuf.ServiceException;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.TableName;
import org.apache.hadoop.hbase.client.Connection;
import org.apache.hadoop.hbase.client.ConnectionFactory;
import org.apache.hadoop.hbase.client.Table;
import org.apache.hadoop.hbase.client.coprocessor.Batch;
import org.apache.hadoop.hbase.ipc.CoprocessorRpcUtils;

import java.io.IOException;
import java.util.Map;

/**
 * Created by sherry on 18-9-29.
 */
public class CoprocessorMain {

    public static void main(String[] args) throws IOException {
        Configuration hBaseConfig = HBaseConfiguration.create();
        hBaseConfig.addResource(new Path("hbase-site.xml"));
        Connection con = ConnectionFactory.createConnection(hBaseConfig);
        TableName tableName = TableName.valueOf("time_series");
        Table table = con.getTable(tableName);

        final Sum.SumRequest request = Sum.SumRequest.newBuilder().setFamily("family").setColumn("values").build();
        try {
            Map<byte[], Double> results = table.coprocessorService(
                    Sum.SumService.class,
                    null,
                    null,
                    new Batch.Call<Sum.SumService, Double>() {
                        @Override
                        public Double call(Sum.SumService aggregate) throws IOException {
                            CoprocessorRpcUtils.BlockingRpcCallback<Sum.SumResponse> rpcCallback = new CoprocessorRpcUtils.BlockingRpcCallback<>();
                            aggregate.getSum(null, request, rpcCallback);
                            Sum.SumResponse response = rpcCallback.get();
                            return response.hasSum() ? response.getSum() : 0L;
                        }
                    }
            );
            for (Double sum : results.values()) {
                System.out.println("Sum = " + sum);
            }
        } catch (ServiceException e) {
            e.printStackTrace();
        } catch (Throwable e) {
            e.printStackTrace();
        }
    }
}
